name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build macOS
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust-core/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check Rust formatting
      run: make ci-check-rust-formatting
    
    - name: Run Rust linter
      run: make ci-run-rust-linter
    
    - name: Build UniFFI bindgen
      run: make ci-build-uniffi-bindgen
    
    - name: Build Rust core
      run: make ci-build-rust-core
    
    - name: Generate UniFFI bindings
      run: make ci-generate-uniffi-bindings
    
    - name: Build Swift package
      run: make ci-build-swift-package
    
    - name: Build Swift executable
      run: make ci-build-swift-executable
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rem-tui-macos
        path: |
          RemTUI/.build/release/RemTUI
          rust-core/target/release/librem_core.dylib
        retention-days: 7

  test:
    name: Test macOS
    runs-on: macos-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust-core/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build UniFFI bindgen
      run: make ci-build-uniffi-bindgen
    
    - name: Build for testing
      run: make ci-build-for-testing
    
    - name: Run Rust tests
      run: make ci-run-rust-tests
    
    - name: Run Swift tests
      run: make ci-run-swift-tests

  quality:
    name: Code Quality
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust-core/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build UniFFI bindgen
      run: make ci-build-uniffi-bindgen
    
    - name: Check code quality
      run: make ci-check-code-quality
