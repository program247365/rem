name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build macOS
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust-core/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check Rust formatting
      run: cd rust-core && cargo fmt --check
    
    - name: Run Rust linter
      run: cd rust-core && cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Install UniFFI bindgen
      run: cargo install uniffi-bindgen
    
    - name: Build Rust core
      run: make build-rust
    
    - name: Generate UniFFI bindings
      run: make build-uniffi
    
    - name: Build Swift package
      run: cd RemTUIKit && swift build -c release
    
    - name: Build Swift executable
      run: cd RemTUI && swift build -c release
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: rem-tui-macos
        path: |
          RemTUI/.build/release/RemTUI
          rust-core/target/release/librem_core.dylib
        retention-days: 7

  test:
    name: Test macOS
    runs-on: macos-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust-core/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install UniFFI bindgen
      run: cargo install uniffi-bindgen
    
    - name: Build for testing
      run: make build
    
    - name: Run Rust tests
      run: make test-rust
    
    - name: Run Swift tests
      run: make test-swift

  quality:
    name: Code Quality
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust-core/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install UniFFI bindgen
      run: cargo install uniffi-bindgen
    
    - name: Check code quality
      run: make check
