namespace rem_core {
    [Throws=RemError]
    sequence<TuiAction> start_tui(sequence<ReminderList> lists);
    
    [Throws=RemError]
    sequence<TuiAction> render_reminders_view(sequence<Reminder> reminders);
    
    [Throws=RemError]
    void set_reminders(sequence<Reminder> reminders);
    
    [Throws=RemError]
    void set_global_reminders(sequence<Reminder> reminders, sequence<string> list_names);
    
    
};

dictionary ReminderList {
    string id;
    string name;
    string color;
    u32 count;
};

dictionary Reminder {
    string id;
    string title;
    string? notes;
    boolean completed;
    u8 priority;
    string? due_date;
};

dictionary NewReminder {
    string title;
    string? notes;
    string? due_date;
    string list_id;
    u8 priority;
};


[Enum]
interface TuiAction {
    Quit();
    SelectList(string list_id);
    ToggleReminder(string reminder_id);
    DeleteReminder(string reminder_id);
    CreateReminder(NewReminder new_reminder);
    Back();
    Refresh();
    ToggleCompletedVisibility();
    GlobalSearch(string query);
};

[Error]
interface RemError {
    PermissionDenied();
    DataAccessError(string message);
    TUIError(string message);
};